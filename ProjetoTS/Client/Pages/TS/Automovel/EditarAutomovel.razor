@page  "/TS/Automovel/EditarAutomovel"
@page "/TS/Automovel/EditarAutomovel/{Automovel}"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>EditarAutomovel</h3>

<div class="card m-3">
    <h4 class="card-header">Cadastro do Automovel</h4>
    <div class="card-body">
        <EditForm Model="@automovel" OnValidSubmit="Validacao" @onreset="Reset">
            <DataAnnotationsValidator />
            <div class="form-row">
                <div class="form-group col">
                    <label>Id</label>
                    <InputNumber @bind-Value="automovel.Id" class="form-control" />
                    
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Nome</label>
                    <InputText @bind-Value="automovel.Nome" class="form-control" />
                    
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Preço</label>
                    <InputNumber @bind-Value="automovel.Preco" @bind-Value:format="F2" class="form-control" />
                   
                </div>
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary mr-1">Salvar</button>
                <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private Automovel automovel = new Automovel();

    [Parameter]
    public string Automovel { get; set; }
    private EditContext editContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var automovelId = Automovel;
        automovel = await Http.GetFromJsonAsync<Automovel>($"/Automovel/PegaId?id={automovelId}"); //recebe um automovel pelo Id enviado do controller que busca no db
    }

    private async Task Validacao()
    {
        await Http.PutAsJsonAsync("/Automovel/Atualizar", automovel); //manda para o controller criar um automovel por um  Json Async
        NavigationManager.NavigateTo("TS/Automovel/ListarAutomovel"); // Navega até o endereco forçando o navegador a dar reload
    }

    private void Reset()
    {
        automovel = new Automovel();
        editContext = new EditContext(automovel); //assim a validação nao é atualizada
    }

}
