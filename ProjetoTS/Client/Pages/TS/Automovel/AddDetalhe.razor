@page  "/TS/Automovel/AddDetalhe/{Automovel}"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>DetalheAutomovel</h3>
<div class="card m-3">
    <h4 class="card-header"></h4>
    <div class="card-body">
        <EditForm Model="@detalheP"OnValidSubmit="VDP">
            @*<DataAnnotationsValidator />*@
           
            <div class="form-row">
                <div class="form-group col">
                    <label>Descrição</label>
                    <InputText @bind-Value="detalheP.Descricao" class="form-control" />
                    @*<ValidationMessage For="@(() => tag.Nome)" />*@
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Estado de Conservação</label>
                    <InputText @bind-Value="detalheP.EstadodeConservacao" class="form-control" />
                    @*<ValidationMessage For="@(() => tag.Nome)" />*@
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Tempo de Uso</label>
                    <InputText @bind-Value="detalheP.TempoDeUso" class="form-control" />
                    @*<ValidationMessage For="@(() => tag.Nome)" />*@
                </div>
            </div>
            @*
            <div class="form-row">
                <div class="form-group col">
                    <label>Id do Automovel</label>
                    <InputNumber @bind-Value="detalheP.IdAutomovel" class="form-control">@automovel.DetalheAutomovel.IdAutomovel</InputNumber>
                    
                </div>
            </div>
               *@
            <div class="text-center">
                <button type="submit" class="btn btn-primary mr-1">Salvar</button>
            </div>

        </EditForm>

    </div>
</div>

@code {
    private DetalheAutomovel detalheP = new DetalheAutomovel();
    private Automovel automovel = new Automovel();

    [Parameter]
    public string Automovel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var automovelId = Automovel;
        automovel = await Http.GetFromJsonAsync<Automovel>($"/Automovel/PegaId?id={automovelId}"); //recebe um automovel pelo Id enviado do controller que busca no db
        detalheP.IdAutomovel=Convert.ToInt32(automovelId);    
    }

    private async Task VDP()
    {
        var d1 = await Http.PostAsJsonAsync("/DetalheAutomovel/CDetalhe", detalheP); //manda para o controller criar uma DetalheAutomovel por um  Json Async
    }



}