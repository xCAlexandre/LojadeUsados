@page "/TS/Filtro/TodosAutomovels"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

@*
    <div class ="form-row">
        <label>Tags</label>
        <InputSelect ValueExpression="@(()=>tag.TagId)"
                     Value="@tag.TagId"
                     ValueChanged="@((int value)=>@OnChangeCat(value))">
            <option value="">Selecione a Tag</option>
            @foreach (var item in TagList)
            {
                <option value="@item.TagId">@item.Nome</option>
            }
        </InputSelect>

        @foreach(var item in AutomovelList){
            <h3>@item.Nome</h3>
        }
        </div>

<h3>Lista de Automovels</h3>
<EditForm Model="@TagList" OnValidSubmit="OnChangeCat">
    <div class="card m-3">
        <h4 class="card-header">Tags</h4>
        <div class="card-body">
            <div class="form-row">
                @foreach (var item in TagList)
                {
                    <div class="form-group col">
                        <input type="checkbox" class="form-check-input">
                        <label class="form-check-label" for="exampleCheck1">@item.Nome</label>
                    </div>
                }
            </div>
            <button type="submit" class="btn btn-primary mr-1">Filtrar</button>
        </div>
    </div>
    <div>
        @foreach (var item in AutomovelList)
        {
            <div class="form-group col">
                <label class="form-check-label" for="exampleCheck1">@item.Nome</label>
            </div>
        }
    </div>
</EditForm>
*@


<div class="card m-3">
    <h4 class="card-header">Filtrar</h4>
    <div class="card-body">
        <EditForm Model="@tagautomovel">
            <DataAnnotationsValidator />

            <div class="form-row">
                <label>Tag</label>
                <InputSelect ValueExpression="@(() => tagautomovel.TagId)"
                             Value="@tagautomovel.TagId"
                             ValueChanged="@((string value) => OnChangeCat(value))">
                    <option value="">Selecione a Categoria</option>
                    @foreach (var item in TagList)
                    {
                        <option value="@item.TagId">@item.Nome</option>
                    }
                </InputSelect>
            </div>

            
                <label>Automovels:</label>

                @foreach (var tag in TagAutomovelList)
                {


                    @foreach (var automovel in AutomovelList) //roda a lista de tags
                    {
                        
                            if (tag.Id == automovel.Id)
                            {

                            <tr>
                            <td>@automovel.Id - @automovel.Nome</td>
                            </tr>
                            }
                            
                     }

                        
                }
                
            <div class="text-center">
                <button type="submit" class="btn btn-primary">Salvar</button>
                <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>


    @code {
        private TagAutomovelDTO tagautomovel = new TagAutomovelDTO();
        private Tag tag = new Tag();
        private List<Automovel> AutomovelList = new List<Automovel>();
        private List<TagAutomovel> TagAutomovelList = new List<TagAutomovel>();
        private List<Tag> TagList = new List<Tag>();

        protected override async Task OnInitializedAsync()
        {
            var automovels = await Http.GetFromJsonAsync<List<Automovel>>("/Automovel/Listar");
            foreach (var item in automovels)
            {
                AutomovelList.Add(item);

            }

            @*
            var tgp = await Http.GetFromJsonAsync<List<TagAutomovel>>("/TagAutomovel/LTagAutomovel");//Rota para o controller ir e trazer uma lista das Tags
            foreach (var item in tgp)
            {
                TagAutomovelList.Add(item);
            }
                *@

            var tags = await Http.GetFromJsonAsync<List<Tag>>("/Tag/ListarTAG");//Rota para o controller ir e trazer uma lista das Tags
            foreach (var item in tags)
            {
                TagList.Add(item);//adiciona cada item na TagList

            }

        }

        private async Task OnChangeCat(string value)
        {
            tagautomovel.TagId = value; //Seta o valor da Categoria no pedidoDto
            var tagautomovels = await Http.GetFromJsonAsync<List<TagAutomovel>>("/TagAutomovel/LTagAutomovel");
            TagAutomovelList.Clear();
            var automovelsByCategory = tagautomovels.Where(c => c.TagId == Convert.ToInt32(value));
            foreach (var item in automovelsByCategory)
            {
                TagAutomovelList.Add(item);
            }

        }
    }
